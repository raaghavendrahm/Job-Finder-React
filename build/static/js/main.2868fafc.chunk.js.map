{"version":3,"sources":["components/Vacancy.js","components/CreateJobs.js","pages/Home.js","pages/Jobs.js","components/Navbar.js","pages/SignUp.js","pages/LogIn.js","App.js","index.js"],"names":["Vacancy","vacancy","deleteVacancy","applyVacancy","className","title","company","city","description","onClick","id","CreateJobs","addVacancy","useState","setTitle","setCompany","setCity","setDescription","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","required","Home","vacancies","setVacancies","useEffect","fetchVacancies","a","fetch","res","json","method","headers","body","JSON","stringify","newVacancy","filter","window","alert","map","Jobs","fetchJobs","data","Navbar","role","to","SignUp","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","LogIn","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2868fafc.chunk.js","sourcesContent":["const Vacancy = ({ vacancy, deleteVacancy, applyVacancy }) => {\n  return (\n    <div className=\"box mt-4 mb-4\">\n      <h1 className=\"title is-5\">{vacancy.title}</h1>\n      <span>{vacancy.company}</span>\n      <p>{vacancy.city}</p>\n      <div className=\"block\"></div>\n      <p>{vacancy.description}</p>\n      <div className=\"is-flex is-justify-content-space-between\">\n        <button\n          className=\"button is-primary mt-4\"\n          onClick={() => applyVacancy(vacancy)}\n        >\n          Apply\n        </button>\n        <button\n          className=\"button is-danger mt-4\"\n          onClick={() => deleteVacancy(vacancy.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Vacancy;\n","import { useState } from 'react';\n\nconst CreateJobs = ({ addVacancy }) => {\n  // Initial state for inputs of form:\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [city, setCity] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Handle Submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // vacancy object is created with user input for title, company, city, and description using addVacancy:\n    addVacancy({ title, company, city, description });\n\n    // Clearing input after submit:\n    setTitle('');\n    setCompany('');\n    setCity('');\n    setDescription('');\n  };\n\n  return (\n    <div className=\"box\">\n      <h1 className=\"title is-5\">Create a Vacancy</h1>\n      <form onSubmit={handleSubmit}>\n        {/* On form submission, handleSubmit function is triggered that creates 'blog' object */}\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Job Title\"\n          value={title} // takes the user input for 'Job Title'\n          onChange={(e) => setTitle(e.target.value)} // sets the value of 'title' state to the value of user input for 'Job Title'. Note that it is a 2-way binding.\n          required\n        />\n        {/* For each input and textarea, margin bottom of 20px is added in index.css where global styles are written*/}\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Company Name\"\n          value={company}\n          onChange={(e) => setCompany(e.target.value)}\n          required\n        />\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"City Name\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          required\n        />\n\n        <textarea\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        ></textarea>\n\n        <button className=\"button is-primary\">Create</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateJobs;\n","import Vacancy from '../components/Vacancy';\n// import { vacancies as jobs } from './data';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CreateJobs from '../components/CreateJobs';\n\nconst Home = () => {\n  // Initial state for vacancies is set to empty array:\n  const [vacancies, setVacancies] = useState([]);\n\n  // Fetch Vacancies (with server):\n\n  // With initial component lodading, data (jobs) from \"db.json\" is fetched and the state is set to data (jobs) using setVacancies and useEffect hook:\n\n  useEffect(() => {\n    const fetchVacancies = async () => {\n      const res = await fetch('http://localhost:5000/vacancies');\n      const vacancies = await res.json();\n      setVacancies(vacancies);\n    };\n\n    fetchVacancies();\n  }, []); // empty dependency array denoting effect on initial component loading.\n\n  /* // Before Server:\n  // With initial page loading, data (jobs) from 'data' is set as state for vacancies using 'setVacancies':\n  useEffect(() => {\n    setVacancies(jobs);\n  }, []); // empty array dependecy */\n\n  // Add Vacancy (with server):\n\n  // To create a vacancy not only in UI, but on server too:\n  const addVacancy = async (vacancy) => {\n    const res = await fetch('http://localhost:5000/vacancies', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(vacancy),\n    });\n\n    const newVacancy = await res.json(); // new task added\n\n    setVacancies([newVacancy, ...vacancies]); // new data is added to the existing tasks.\n\n    // Note that, with server as 'id' is automatically generated, the id value will be incremented for a new data and the new vacancy will be added to the bottom (not top).\n  };\n\n  /* // Before Server:\n  const addVacancy = (vacancy) => {\n    const id = new Date().getTime().toString(); // to create a random unique id\n    const newVacancy = { id, ...vacancy };\n    setVacancies([newVacancy, ...vacancies]);\n  }; */\n\n  // Delete Vacancy (with server)\n\n  // To delete a vacancy not only in UI, but on server too:\n  const deleteVacancy = async (id) => {\n    await fetch(`http://localhost:5000/vacancies/${id}`, {\n      method: 'DELETE',\n    });\n    setVacancies(vacancies.filter((vacancy) => vacancy.id !== id));\n  };\n\n  /* // Without Server:\n  const deleteVacancy = (id) => {\n    setVacancies(vacancies.filter((vacancy) => vacancy.id !== id));\n  }; */\n\n  // Apply for Vacancy\n  const applyVacancy = (vacancy) => {\n    window.alert(`Successfully applied for the position ${vacancy.title}`);\n  };\n\n  return (\n    <>\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Find your dream job today</p>\n          <p className=\"subtitle\">Apply for any vacancies below</p>\n        </div>\n      </section>\n\n      <section>\n        <CreateJobs addVacancy={addVacancy} />\n      </section>\n\n      {/* Display vacancies: */}\n      <section>\n        {vacancies.map((vacancy) => {\n          return (\n            <Vacancy\n              key={vacancy.id}\n              vacancy={vacancy}\n              deleteVacancy={deleteVacancy}\n              applyVacancy={applyVacancy}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport Vacancy from '../components/Vacancy';\n\nconst Jobs = () => {\n  // Initial state for vacancies is set to empty array:\n  const [vacancies, setVacancies] = useState([]);\n\n  // Fetch Jobs (with server)\n\n  // With initial component lodading, data (jobs) from \"db.json\" is fetched and the state is set to data (jobs) using setVacancies and useEffect hook:\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const res = await fetch('http://localhost:5000/vacancies');\n      const data = await res.json();\n      setVacancies(data);\n    };\n\n    fetchJobs();\n  }, []);\n\n  // Delete Vacancy (with server)\n\n  // To delete a vacancy not only in UI, but on server too:\n  const deleteVacancy = async (id) => {\n    await fetch(`http://localhost:5000/vacancies/${id}`, {\n      method: 'DELETE',\n    });\n    setVacancies(vacancies.filter((vacancy) => vacancy.id !== id));\n  };\n\n  // Apply for Vacancy\n  const applyVacancy = (vacancy) => {\n    window.alert(`Successfully applied for the position ${vacancy.title}`);\n  };\n\n  return (\n    <>\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <p className=\"title\">Find your dream job today</p>\n          <p className=\"subtitle\">Apply for any vacancies below</p>\n        </div>\n      </section>\n\n      {/* Display vacancies: */}\n      <section>\n        {vacancies.map((vacancy) => {\n          return (\n            <Vacancy\n              key={vacancy.id}\n              vacancy={vacancy}\n              deleteVacancy={deleteVacancy}\n              applyVacancy={applyVacancy}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\nexport default Jobs;\n","import { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  // Sign Up\n  const signUp = () => {\n    console.log('signup');\n  };\n\n  // Login\n  const logIn = () => {\n    console.log('login');\n  };\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item\" to=\"/\">\n          JOB FINDER\n        </Link>\n\n        <a\n          role=\"button\"\n          className=\"navbar-burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <Link to=\"/\" className=\"navbar-item\">\n            Home\n          </Link>\n\n          <Link to=\"/jobs\" className=\"navbar-item\">\n            Jobs\n          </Link>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <Link to=\"/signup\" className=\"button is-primary\">\n                <strong>Sign up</strong>\n              </Link>\n              <Link to=\"/login\" className=\"button is-light\">\n                Log in\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { useState } from 'react';\n\nconst SignUp = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  // On Sign Up\n  const onSignUp = (e) => {\n    e.preventDefault();\n\n    if (!name || !email || !password || !confirmPassword) {\n      alert('Please fill all the fields');\n    } else if (name && email && password && confirmPassword) {\n      alert('Signed Up Successfully!');\n    }\n\n    // Clear form:\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h1 className=\"title is-5\">Sign Up</h1>\n      <form>\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          required\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"email\"\n          placeholder=\"Email Id\"\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          required\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n\n        <button className=\"button is-primary\" onClick={onSignUp}>\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { useState } from 'react';\n\nconst LogIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // On Log In\n  const onLogIn = (e) => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      alert('Please enter email and password');\n    } else if (email && password) {\n      alert('Logged In Successfully!');\n    }\n\n    // Clearing form\n    setEmail('');\n    setPassword('');\n\n    // setMessage('HELLO');\n    // console.log(message);\n  };\n\n  return (\n    <div className=\"log-in\">\n      <form>\n        <input\n          className=\"input\"\n          type=\"email\"\n          placeholder=\"Email Id\"\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <button className=\"button is-primary\" onClick={onLogIn}>\n          Log In\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LogIn;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Jobs from './pages/Jobs';\nimport Navbar from './components/Navbar';\nimport SignUp from './pages/SignUp';\nimport LogIn from './pages/LogIn';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Router>\n        <Navbar></Navbar>\n        <Switch>\n          {/* Switch stops further finding of routes if the route matches. */}\n          <Route path=\"/\" component={Home} exact></Route>\n          <Route path=\"/jobs\" component={Jobs} exact></Route>\n          <Route path=\"/signup\" component={SignUp} exact></Route>\n          <Route path=\"/login\" component={LogIn} exact></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}